process.loadEnvFile();
const { Bot, InlineKeyboard, InputFile, session } = require("grammy");
const fs = require("fs");
const path = require("path");
const { writeFile } = require("fs/promises");

const bot = new Bot(process.env.BOT_API_KEY);

const CHANNEL_USERNAME = "@lafee_remont";
const DESIGNER_USERNAME = "olga_korshow";

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ JSON
const usersFilePath = path.join(__dirname, "data", "users.json");
let users = new Set();
// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞
if (fs.existsSync(usersFilePath)) {
  try {
    const data = fs.readFileSync(usersFilePath, "utf-8");
    const parsedUsers = JSON.parse(data);
    users = new Set(parsedUsers);
    console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞.");
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
  }
}
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç—å –∏ —Ñ–∞–π–ª
function addUser(ctx) {
  const user = ctx.from;
  const userName = user.username ? `@${user.username}` : `${user.first_name} ${user.last_name || ""}`.trim();
  if (!users.has(userName)) {
    users.add(userName);
    console.log(`–î–æ–±–∞–≤–ª–µ–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName}`);
    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª
    try {
      fs.mkdirSync(path.dirname(usersFilePath), { recursive: true });
      fs.writeFileSync(usersFilePath, JSON.stringify(Array.from(users)), "utf-8");
      console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Ñ–∞–π–ª.");
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
    }
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /list –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∫–∞–Ω–∞–ª–∞)
bot.command("list", async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
    const member = await ctx.api.getChatMember(CHANNEL_USERNAME, ctx.from.id);
    const isAdmin = ["administrator", "creator"].includes(member.status);

    if (isAdmin) {
      if (users.size > 0) {
        const userList = Array.from(users).join("\n");
        await ctx.reply(`üí° –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞—á–∞–≤—à–∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º:\n\n${userList}`);
        console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
      } else {
        await ctx.reply("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –ø—É—Å—Ç.", {
        });
        console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.");
      }
    } else {
      await ctx.reply("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º –∫–∞–Ω–∞–ª–∞.");
      console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞.");
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.");
  }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–¥–∞—Ä–∫–æ–≤
bot.use(session({
  initial: () => ({
    style: null,
    giftSent: {}, // –•—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
    giftMessages: []
  }),
}));



bot.api.setMyCommands([
  { command: "start", description: "–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º" },
  { command: "list", description: "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" },
]);

// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
async function isAdmin(ctx) {
  try {
    const member = await ctx.api.getChatMember(ctx.chat.id, ctx.from.id);
    return member.status === "administrator" || member.status === "creator";
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", err);
    return false;
  }
}

bot.command("start", async (ctx) => {
  console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start");

  // –°–±—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–∞—Ö
  ctx.session.giftSent = {};
  ctx.session.style = null;
  ctx.session.giftMessages = [];

  const firstName = ctx.from?.first_name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

  const filePath = path.join(__dirname, "img", "welcome.jpg");
  const photo = new InputFile(filePath);

  const caption = `–ü—Ä–∏–≤–µ—Ç, ${firstName}!\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–∞—Ä—É –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø–æ–ª—É—á–∏—Ç–µ <b>–ì–û–¢–û–í–û–ï –î–ò–ó–ê–ô–ù–ï–†–°–ö–û–ï –†–ï–®–ï–ù–ò–ï</b>`;

  const keyboard = new InlineKeyboard().text("–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã", "show_options");

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫" —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  if (await isAdmin(ctx)) {
    keyboard.row().text("–°–ø–∏—Å–æ–∫", "admin_list");
  }

  await ctx.replyWithPhoto(photo, {
    caption,
    parse_mode: "HTML",
    reply_markup: keyboard,
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞–º—è—Ç—å
  addUser(ctx);
});

bot.callbackQuery("show_options", async (ctx) => {
  console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞ callbackQuery: show_options");

  const optionsKeyboard = new InlineKeyboard()
    .text("–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å—Ç—É–¥–∏—è", "option_1")
    .row()
    .text("–û–¥–Ω–∞ –∫–æ–º–Ω–∞—Ç–∞", "option_2")
    .row()
    .text("–î–≤–µ –∫–æ–º–Ω–∞—Ç—ã", "option_3")
    .row()
    .text("3 –∏ –±–æ–ª–µ–µ", "option_4");

  await ctx.reply("–°–∫–æ–ª—å–∫–æ –∫–æ–º–Ω–∞—Ç –≤ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ?", {
    reply_markup: optionsKeyboard,
  });

  await ctx.answerCallbackQuery();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è "–ö–≤–∞—Ä—Ç–∏—Ä–∞ —Å—Ç—É–¥–∏—è" –æ—Ç–¥–µ–ª—å–Ω–æ
bot.callbackQuery("option_1", async (ctx) => {
  console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞ callbackQuery: option_1");

  ctx.session.style = "LA FEE –∫–≤–∞—Ä—Ç–∏—Ä–∞-—Å—Ç—É–¥–∏—è.pdf";

  const keyboard = new InlineKeyboard().text("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ", "get_gift");

  await ctx.reply(
    '<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–≤–µ—Ç.</b> –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram –∫–∞–Ω–∞–ª <a href="https://t.me/lafee_remont">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëá</a>.',
    {
      parse_mode: "HTML",
      reply_markup: keyboard,
    }
  );

  await ctx.answerCallbackQuery();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –æ–ø—Ü–∏–π
bot.callbackQuery(/option_[2-4]/, async (ctx) => {
  console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞ callbackQuery: option");

  const photoFiles = [
    "modern.jpeg",
    "classic.jpeg",
    "minimal.jpeg",
    "loft.jpeg",
  ];

  for (const fileName of photoFiles) {
    const filePath = path.join(__dirname, "img", fileName);
    const photo = new InputFile(filePath);
    await ctx.replyWithPhoto(photo);
  }

  const newQuestionKeyboard = new InlineKeyboard()
    .text("–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "answer_1")
    .row()
    .text("–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π", "answer_2")
    .row()
    .text("–ú–∏–Ω–∏–º–∞–ª–∏–∑–º", "answer_3")
    .row()
    .text("–õ–æ—Ñ—Ç", "answer_4")
    .row()
    .text("–î—Ä—É–≥–æ–µ", "answer_5");

  await ctx.reply("–ö–∞–∫–æ–π —Å—Ç–∏–ª—å –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ –≤–∞–º –±–ª–∏–∂–µ?", {
    reply_markup: newQuestionKeyboard,
  });

  await ctx.answerCallbackQuery();
});

bot.callbackQuery(/answer_\d/, async (ctx) => {
  console.log("–û–±—Ä–∞–±–æ—Ç–∫–∞ callbackQuery: answer");

  const answer = ctx.callbackQuery.data;

  // –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º PDF-—Ñ–∞–π–ª–æ–º
  const styleMap = {
    answer_1: "LA FEE —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–∏.pdf",
    answer_2: "LA FEE –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å.pdf",
    answer_3: "LA FEE –º–∏–Ω–∏–º–∞–ª–∏–∑–º.pdf",
    answer_4: "LA FEE –ª–æ—Ñ—Ç.pdf",
  };

  if (styleMap[answer]) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏–∏
    ctx.session.style = styleMap[answer];

    const keyboard = new InlineKeyboard().text("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ", "get_gift");

    await ctx.reply(
      '<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–∏ –æ—Ç–≤–µ—Ç—ã.</b> –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∞—Ä–∫–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram –∫–∞–Ω–∞–ª <a href="https://t.me/lafee_remont">–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è üëá</a>.',
      {
        parse_mode: "HTML",
        reply_markup: keyboard,
      }
    );
  } else if (answer === "answer_5") {
    const message = `<b>–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–≤–µ—Ç—ã.</b> –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–±–æ—Ä–∫–∏ –ø–æ —Å—Ç–∏–ª—é –æ—Ç –Ω–∞—à–µ–≥–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –≤ Telegram —Å–ª–æ–≤–æ "–°–¢–ò–õ–¨".`;

    const keyboard = new InlineKeyboard().url(
      '–ù–∞–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ ¬´–°–¢–ò–õ–¨¬ª.',
      `https://t.me/${DESIGNER_USERNAME}?start=–°–¢–ò–õ–¨`
    );

    await ctx.reply(message, {
      parse_mode: "HTML",
      reply_markup: keyboard,
    });
  }

  await ctx.answerCallbackQuery();
});

bot.callbackQuery("get_gift", async (ctx) => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –≤—ã–±—Ä–∞–Ω —Å—Ç–∏–ª—å, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
    if (!ctx.session.style) {
      await ctx.reply("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å –∑–∞–Ω–æ–≤–æ, —Ç–∞–∫ –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã.");
      return;
    }

    const selectedStyle = ctx.session.style;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ª—É—á–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è
    if (ctx.session.giftSent[selectedStyle]) {
      await ctx.answerCallbackQuery({ text: "–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ üéÅ", show_alert: true });
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∫–∞–Ω–∞–ª
    const member = await ctx.api.getChatMember(CHANNEL_USERNAME, ctx.from.id);
    const status = member.status;

    if (status === "member" || status === "administrator" || status === "creator") {
      const filePath = path.join(__dirname, "pdf", selectedStyle);
      const document = new InputFile(filePath, selectedStyle);
      await ctx.replyWithDocument(document, {
        caption: "üéÅ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –í–æ—Ç –≤–∞—à –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –ø–æ–¥–±–æ—Ä–∫–∞ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Å—Ç–∏–ª—é.",
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫" –Ω–∞ "–°–ø–∞—Å–∏–±–æ ü•≥"
      const thankYouKeyboard = new InlineKeyboard().text("–°–ø–∞—Å–∏–±–æ ü•≥", "thank_you");

      if (ctx.session.giftMessages) {
        for (const msg of ctx.session.giftMessages) {
          try {
            await ctx.api.editMessageReplyMarkup(msg.chat_id, msg.message_id, {
              reply_markup: thankYouKeyboard,
            });
          } catch (err) {
            console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ${msg.message_id}:`, err);
          }
        }
        // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ctx.session.giftMessages = [];
      }

      // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
      ctx.session.giftSent[selectedStyle] = true;
    } else {
      const keyboard = new InlineKeyboard().text("–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ üéÅ", "get_gift");
      const sentMessage = await ctx.reply(
        `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ${CHANNEL_USERNAME}, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫.`,
        { reply_markup: keyboard }
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫"
      if (!ctx.session.giftMessages) {
        ctx.session.giftMessages = [];
      }
      ctx.session.giftMessages.push({
        chat_id: ctx.chat.id,
        message_id: sentMessage.message_id,
      });
    }

    await ctx.answerCallbackQuery();
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
  }
});

bot.callbackQuery("admin_list", async (ctx) => {
  try {
    if (users.size > 0) {
      const userList = Array.from(users).join("\n");
      await ctx.reply(`üí° –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞—á–∞–≤—à–∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –±–æ—Ç–æ–º:\n\n${userList}`);
      console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.");
    } else {
      await ctx.reply("‚öôÔ∏è –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –ø—É—Å—Ç.");
      console.log("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—É—Å—Ç.");
    }
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", err);
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.");
  }

  await ctx.answerCallbackQuery();
});

bot.start();